package main

import (
	"fmt"
	"time"

	"github.com/USA-RedDragon/dmrgo/dmr/enums"
	"github.com/USA-RedDragon/dmrgo/dmr/layer2"
)

// Create a static array with a length of 7 whose contents are arrays of 33 bytes
const (
	DMR_BURST_SIZE = 33

	DMR_PARROT_KERCHUNK_BURST_COUNT = 15
	DMR_SMS_BURST_COUNT             = 8
	DMR_VOICE_BURST_COUNT           = 79
)

var EXAMPLE_DMR_PARROT_KERCHUNK_BURSTS = [DMR_PARROT_KERCHUNK_BURST_COUNT][DMR_BURST_SIZE]byte{
	{68, 75, 3, 135, 36, 66, 12, 240, 21, 240, 12, 161, 196, 109, 255, 87, 215, 93, 245, 222, 49, 168, 53, 24, 63, 48, 61, 97, 56, 82, 151, 134, 91},           // First, burst
	{226, 215, 161, 39, 49, 45, 130, 32, 35, 149, 235, 131, 64, 119, 85, 253, 125, 247, 95, 119, 31, 222, 238, 242, 236, 188, 129, 84, 44, 58, 1, 190, 69},     // Second, burst
	{142, 252, 230, 48, 43, 37, 196, 158, 153, 140, 252, 165, 18, 97, 48, 0, 1, 16, 153, 18, 168, 64, 6, 183, 238, 188, 227, 114, 32, 167, 133, 66, 59},        // A
	{252, 156, 192, 116, 102, 163, 208, 66, 25, 222, 190, 192, 80, 33, 112, 241, 41, 105, 103, 70, 195, 132, 82, 59, 248, 184, 197, 20, 100, 43, 196, 30, 243}, // B
	{216, 184, 197, 54, 100, 15, 144, 30, 243, 234, 186, 197, 118, 65, 112, 144, 195, 89, 87, 66, 15, 208, 28, 195, 250, 152, 229, 118, 38, 11, 144, 28, 211},  // C
	{250, 152, 229, 118, 38, 11, 128, 30, 209, 234, 152, 229, 118, 33, 88, 74, 162, 186, 80, 118, 27, 144, 28, 195, 232, 184, 197, 20, 100, 59, 196, 12, 211},  // D
	{234, 152, 229, 118, 38, 27, 144, 30, 227, 234, 152, 229, 118, 33, 16, 0, 0, 0, 14, 38, 27, 144, 30, 243, 234, 154, 199, 118, 32, 90, 212, 30, 209},        // E
	{234, 152, 229, 118, 38, 26, 144, 30, 209, 234, 186, 197, 118, 71, 85, 253, 125, 247, 95, 114, 31, 208, 30, 209, 234, 152, 229, 118, 38, 24, 145, 62, 209}, // F
	{234, 152, 229, 118, 38, 26, 144, 30, 209, 234, 186, 197, 118, 71, 85, 253, 125, 247, 95, 114, 31, 208, 30, 209, 234, 152, 229, 118, 38, 24, 145, 62, 209}, // Burst
	{202, 152, 199, 86, 7, 41, 129, 62, 213, 216, 186, 231, 54, 97, 48, 0, 1, 16, 153, 18, 95, 196, 62, 209, 200, 186, 231, 54, 98, 93, 213, 62, 209},          // A
	{204, 156, 224, 48, 66, 165, 209, 114, 29, 204, 156, 224, 48, 65, 112, 241, 41, 105, 103, 66, 181, 193, 98, 13, 228, 37, 220, 235, 18, 27, 153, 201, 9},    // B
	{191, 102, 135, 229, 219, 137, 224, 95, 238, 83, 96, 152, 66, 81, 112, 144, 195, 89, 87, 69, 45, 93, 209, 213, 222, 229, 130, 113, 48, 16, 26, 192, 186},   // C
	{142, 222, 212, 22, 41, 113, 211, 175, 158, 140, 222, 133, 86, 97, 88, 74, 162, 186, 80, 113, 249, 7, 99, 147, 140, 222, 133, 86, 97, 249, 7, 97, 147},     // D
	{140, 222, 133, 86, 97, 249, 22, 65, 147, 140, 222, 132, 86, 97, 16, 0, 0, 0, 14, 33, 233, 22, 65, 146, 142, 254, 164, 82, 99, 153, 49, 97, 146},           // E
	{68, 36, 3, 83, 36, 242, 12, 136, 21, 128, 12, 1, 196, 173, 255, 87, 215, 93, 245, 217, 100, 188, 54, 32, 56, 80, 49, 33, 48, 82, 142, 134, 104},           // F
}

var EXAMPLE_DMR_SMS_BURSTS = [DMR_SMS_BURST_COUNT][DMR_BURST_SIZE]byte{
	{66, 74, 30, 185, 189, 0, 34, 4, 51, 201, 3, 83, 4, 205, 255, 87, 215, 93, 245, 218, 200, 246, 69, 24, 215, 120, 191, 128, 181, 29, 41, 17, 231},
	{66, 10, 30, 59, 188, 28, 32, 28, 49, 248, 143, 19, 4, 205, 255, 87, 215, 93, 245, 218, 200, 134, 101, 40, 151, 152, 188, 32, 176, 221, 32, 17, 209},
	{120, 46, 39, 122, 17, 134, 163, 192, 150, 161, 83, 41, 197, 141, 255, 87, 215, 93, 245, 211, 56, 148, 60, 1, 179, 166, 38, 65, 143, 130, 6, 188, 159},
	{16, 140, 161, 23, 3, 28, 3, 236, 4, 224, 10, 192, 5, 237, 255, 87, 215, 93, 245, 208, 149, 160, 64, 92, 129, 241, 4, 128, 27, 64, 81, 128, 94},
	{121, 240, 35, 220, 152, 88, 32, 196, 26, 232, 115, 133, 197, 237, 255, 87, 215, 93, 245, 208, 151, 185, 63, 59, 110, 33, 7, 228, 140, 220, 160, 61, 85},
	{32, 210, 97, 132, 144, 84, 0, 153, 1, 100, 192, 174, 5, 237, 255, 87, 215, 93, 245, 208, 150, 101, 129, 176, 228, 161, 70, 102, 142, 64, 7, 18, 169},
	{64, 143, 197, 168, 42, 126, 74, 192, 36, 136, 2, 192, 133, 237, 255, 87, 215, 93, 245, 208, 148, 124, 229, 152, 43, 225, 70, 199, 32, 24, 76, 4, 39},
	{0, 117, 0, 232, 1, 160, 0, 24, 7, 144, 24, 160, 5, 237, 255, 87, 215, 93, 245, 208, 150, 228, 5, 40, 1, 96, 0, 160, 41, 128, 25, 128, 217},
}

var EXAMPLE_DMR_VOICE_BURSTS = [DMR_VOICE_BURST_COUNT][DMR_BURST_SIZE]byte{
	{68, 75, 3, 135, 36, 66, 12, 240, 21, 240, 12, 161, 196, 109, 255, 87, 215, 93, 245, 222, 49, 168, 53, 24, 63, 48, 61, 97, 56, 82, 151, 134, 91},
	{251, 168, 229, 86, 39, 47, 128, 121, 213, 218, 168, 198, 118, 7, 85, 253, 125, 247, 95, 118, 14, 161, 73, 225, 218, 138, 198, 118, 7, 123, 245, 73, 245},
	{251, 168, 228, 86, 39, 63, 161, 73, 245, 155, 202, 161, 112, 33, 48, 0, 1, 16, 153, 16, 100, 101, 41, 125, 155, 202, 161, 112, 32, 102, 101, 25, 93},
	{187, 202, 131, 80, 1, 87, 101, 9, 121, 187, 202, 131, 80, 1, 112, 241, 41, 105, 103, 65, 85, 101, 57, 89, 155, 202, 161, 112, 32, 100, 101, 57, 93},
	{187, 202, 131, 80, 1, 85, 101, 57, 89, 155, 200, 163, 112, 65, 112, 144, 195, 89, 87, 67, 85, 37, 57, 89, 217, 168, 196, 86, 70, 46, 241, 9, 241},
	{155, 200, 163, 112, 67, 87, 37, 25, 89, 155, 232, 129, 82, 1, 88, 74, 162, 186, 80, 115, 81, 53, 57, 89, 187, 232, 131, 80, 0, 34, 49, 25, 93},
	{187, 232, 163, 114, 34, 98, 53, 25, 93, 187, 232, 131, 80, 1, 16, 0, 0, 0, 14, 32, 34, 49, 25, 93, 187, 232, 131, 80, 0, 32, 49, 57, 93},
	{187, 232, 131, 80, 0, 32, 49, 57, 93, 187, 202, 131, 80, 7, 85, 253, 125, 247, 95, 113, 85, 86, 25, 89, 187, 202, 131, 80, 1, 85, 86, 25, 89},
	{155, 202, 161, 112, 32, 100, 117, 41, 125, 154, 202, 161, 112, 33, 48, 0, 1, 16, 153, 16, 102, 117, 9, 125, 185, 200, 163, 114, 66, 103, 37, 73, 45},
	{185, 200, 163, 114, 66, 101, 37, 105, 61, 185, 200, 163, 114, 65, 112, 241, 41, 105, 103, 66, 101, 6, 73, 61, 186, 200, 129, 80, 98, 100, 37, 41, 125},
	{187, 200, 129, 80, 98, 100, 6, 9, 125, 251, 170, 230, 86, 65, 112, 144, 195, 89, 87, 68, 12, 194, 73, 241, 255, 133, 165, 145, 187, 234, 14, 129, 197},
	{40, 242, 200, 135, 104, 84, 129, 235, 47, 205, 228, 130, 55, 17, 88, 74, 162, 186, 80, 112, 113, 89, 228, 236, 157, 238, 166, 18, 97, 174, 84, 115, 163},
	{61, 229, 138, 73, 71, 89, 190, 0, 149, 160, 206, 164, 68, 113, 16, 0, 0, 0, 14, 34, 135, 139, 163, 45, 237, 71, 229, 0, 70, 106, 53, 76, 9},
	{254, 172, 192, 84, 35, 133, 212, 114, 25, 222, 156, 194, 16, 7, 85, 253, 125, 247, 95, 113, 165, 196, 115, 25, 232, 152, 228, 20, 34, 56, 192, 63, 179},
	{248, 152, 228, 20, 34, 59, 192, 47, 129, 216, 184, 198, 18, 1, 48, 0, 1, 16, 153, 22, 30, 145, 63, 129, 236, 244, 162, 34, 67, 82, 88, 245, 170},
	{241, 101, 133, 103, 95, 205, 61, 82, 143, 245, 64, 128, 39, 81, 112, 241, 41, 105, 103, 77, 51, 42, 60, 65, 27, 137, 197, 51, 97, 224, 40, 2, 113},
	{41, 141, 31, 248, 156, 2, 7, 126, 226, 95, 142, 119, 254, 241, 112, 144, 195, 89, 87, 74, 40, 56, 18, 171, 44, 236, 81, 255, 162, 137, 62, 237, 29},
	{226, 53, 97, 4, 246, 218, 51, 71, 73, 224, 6, 35, 54, 145, 88, 74, 162, 186, 80, 127, 17, 162, 191, 39, 135, 9, 32, 96, 184, 118, 237, 64, 128},
	{164, 41, 97, 84, 228, 249, 106, 216, 155, 133, 41, 68, 251, 145, 16, 0, 0, 0, 14, 33, 212, 214, 177, 133, 227, 134, 2, 200, 213, 158, 194, 212, 135},
	{215, 161, 33, 101, 131, 125, 127, 193, 65, 241, 134, 18, 235, 215, 85, 253, 125, 247, 95, 113, 219, 210, 133, 135, 167, 177, 47, 18, 64, 238, 139, 184, 12},
	{230, 194, 166, 115, 83, 212, 145, 108, 174, 196, 208, 165, 83, 17, 48, 0, 1, 16, 153, 23, 211, 166, 72, 234, 142, 168, 66, 0, 4, 68, 0, 128, 132},
	{224, 45, 95, 220, 83, 186, 70, 163, 64, 199, 120, 78, 89, 225, 112, 241, 41, 105, 103, 79, 184, 99, 201, 244, 135, 10, 80, 83, 247, 236, 94, 141, 185},
	{166, 42, 33, 117, 158, 81, 158, 65, 231, 131, 229, 65, 102, 129, 112, 144, 195, 89, 87, 66, 156, 222, 238, 39, 129, 229, 64, 66, 133, 158, 155, 205, 5},
	{195, 166, 39, 0, 133, 229, 95, 220, 205, 164, 210, 69, 32, 161, 88, 74, 162, 186, 80, 113, 52, 168, 177, 158, 163, 210, 99, 96, 31, 38, 179, 9, 167},
	{211, 160, 48, 136, 57, 66, 138, 33, 84, 227, 131, 114, 206, 113, 16, 0, 0, 0, 14, 33, 190, 45, 200, 122, 227, 178, 69, 70, 65, 213, 228, 228, 85},
	{243, 162, 114, 142, 67, 169, 126, 185, 92, 192, 12, 9, 19, 55, 85, 253, 125, 247, 95, 126, 126, 76, 80, 3, 230, 62, 44, 51, 134, 14, 103, 191, 42},
	{151, 9, 117, 157, 212, 242, 145, 226, 241, 167, 242, 101, 2, 225, 48, 0, 1, 16, 153, 18, 98, 175, 194, 255, 165, 209, 102, 0, 227, 96, 174, 181, 223},
	{166, 240, 70, 2, 229, 34, 203, 227, 238, 177, 25, 69, 49, 49, 112, 241, 41, 105, 103, 73, 186, 117, 97, 163, 146, 14, 100, 87, 150, 67, 79, 134, 119},
	{162, 60, 100, 17, 164, 83, 27, 214, 54, 208, 109, 38, 255, 145, 112, 144, 195, 89, 87, 71, 19, 20, 175, 182, 196, 182, 5, 236, 11, 185, 232, 90, 187},
	{225, 177, 65, 232, 48, 141, 40, 169, 104, 225, 197, 118, 110, 49, 88, 74, 162, 186, 80, 113, 174, 51, 79, 229, 131, 225, 0, 96, 115, 174, 87, 145, 238},
	{161, 225, 66, 36, 63, 54, 131, 89, 182, 129, 241, 84, 200, 33, 16, 0, 0, 0, 14, 46, 28, 104, 5, 173, 182, 8, 85, 223, 227, 179, 196, 163, 199},
	{210, 124, 53, 154, 167, 17, 100, 159, 162, 240, 126, 1, 68, 247, 85, 253, 125, 247, 95, 119, 58, 200, 231, 191, 160, 86, 37, 18, 150, 242, 165, 18, 162},
	{176, 85, 39, 33, 163, 242, 196, 48, 129, 120, 152, 19, 157, 177, 48, 0, 1, 16, 153, 23, 26, 139, 213, 75, 44, 232, 115, 253, 63, 48, 23, 14, 157},
	{56, 222, 8, 31, 54, 251, 5, 30, 170, 209, 69, 13, 156, 81, 112, 241, 41, 105, 103, 70, 59, 233, 33, 210, 144, 4, 161, 54, 49, 43, 40, 236, 10},
	{164, 35, 134, 51, 51, 160, 77, 177, 147, 149, 34, 164, 19, 17, 112, 144, 195, 89, 87, 66, 144, 92, 176, 133, 247, 224, 132, 68, 65, 147, 149, 126, 136},
	{129, 78, 129, 80, 31, 17, 115, 224, 181, 208, 47, 132, 118, 49, 88, 74, 162, 186, 80, 115, 242, 65, 74, 18, 183, 123, 229, 50, 50, 96, 145, 7, 51},
	{204, 172, 226, 86, 102, 213, 163, 85, 28, 204, 172, 226, 86, 97, 16, 0, 0, 0, 14, 38, 213, 163, 85, 28, 165, 167, 140, 230, 148, 86, 58, 229, 63},
	{161, 255, 167, 84, 97, 230, 250, 213, 14, 215, 26, 131, 50, 7, 85, 253, 125, 247, 95, 116, 108, 103, 114, 201, 132, 110, 28, 143, 252, 224, 188, 73, 242},
	{197, 12, 34, 245, 229, 230, 163, 11, 170, 245, 230, 37, 228, 145, 48, 0, 1, 16, 153, 18, 29, 71, 66, 191, 225, 164, 5, 6, 149, 144, 43, 207, 239},
	{194, 225, 38, 41, 215, 169, 218, 119, 111, 195, 164, 64, 141, 241, 112, 241, 41, 105, 103, 75, 1, 6, 121, 139, 195, 130, 1, 188, 14, 84, 171, 70, 115},
	{134, 209, 9, 210, 141, 81, 216, 235, 103, 169, 4, 24, 21, 209, 112, 144, 195, 89, 87, 65, 221, 166, 200, 137, 205, 215, 30, 113, 59, 254, 2, 136, 236},
	{69, 188, 200, 53, 47, 208, 127, 73, 52, 177, 132, 15, 253, 113, 88, 74, 162, 186, 80, 116, 63, 69, 175, 187, 167, 130, 41, 249, 19, 181, 87, 225, 38},
	{196, 243, 134, 115, 113, 145, 180, 105, 221, 213, 227, 166, 1, 49, 16, 0, 0, 0, 14, 35, 131, 165, 92, 156, 202, 97, 227, 117, 87, 208, 39, 2, 164},
	{163, 128, 44, 207, 237, 212, 90, 13, 47, 246, 178, 96, 101, 151, 85, 253, 125, 247, 95, 121, 181, 253, 72, 126, 194, 166, 7, 97, 179, 144, 124, 156, 218},
	{224, 150, 36, 33, 161, 177, 74, 173, 141, 131, 230, 64, 99, 161, 48, 0, 1, 16, 153, 23, 158, 155, 157, 18, 130, 230, 117, 205, 133, 144, 18, 246, 11},
	{167, 194, 80, 139, 225, 88, 112, 239, 243, 133, 196, 113, 206, 65, 112, 241, 41, 105, 103, 79, 144, 59, 95, 39, 177, 227, 35, 37, 0, 191, 101, 161, 201},
	{131, 226, 1, 65, 19, 201, 100, 160, 204, 195, 178, 102, 103, 97, 112, 144, 195, 89, 87, 70, 128, 226, 240, 81, 134, 196, 18, 201, 5, 88, 202, 131, 60},
	{192, 160, 105, 230, 71, 27, 4, 119, 131, 130, 79, 43, 187, 17, 88, 74, 162, 186, 80, 115, 211, 128, 160, 223, 197, 46, 62, 85, 228, 90, 39, 191, 111},
	{215, 72, 82, 219, 139, 66, 150, 62, 112, 213, 146, 22, 136, 129, 16, 0, 0, 0, 14, 32, 20, 164, 232, 107, 167, 247, 115, 168, 77, 134, 123, 25, 87},
	{134, 197, 68, 68, 58, 158, 147, 18, 107, 225, 131, 68, 6, 81, 48, 0, 1, 16, 153, 17, 144, 240, 160, 68, 133, 179, 45, 34, 117, 206, 249, 233, 121},
	{133, 163, 108, 65, 9, 38, 14, 117, 102, 195, 247, 22, 8, 33, 112, 241, 41, 105, 103, 74, 117, 247, 209, 156, 212, 91, 39, 112, 177, 151, 152, 168, 5},
	{212, 72, 4, 5, 226, 215, 216, 187, 82, 182, 83, 35, 21, 241, 112, 144, 195, 89, 87, 65, 30, 229, 88, 15, 182, 114, 35, 7, 215, 60, 160, 75, 62},
	{214, 50, 112, 238, 167, 29, 184, 3, 237, 56, 249, 84, 250, 177, 88, 74, 162, 186, 80, 117, 52, 79, 128, 128, 30, 216, 112, 152, 125, 49, 4, 42, 251},
	{111, 138, 106, 94, 117, 122, 129, 81, 175, 226, 118, 47, 137, 97, 16, 0, 0, 0, 14, 33, 111, 218, 16, 243, 165, 0, 166, 1, 16, 148, 45, 145, 134},
	{149, 51, 167, 3, 83, 183, 91, 163, 240, 165, 35, 134, 65, 23, 85, 253, 125, 247, 95, 114, 183, 125, 146, 197, 239, 244, 163, 55, 0, 69, 125, 192, 201},
	{248, 185, 231, 82, 34, 104, 181, 90, 193, 232, 185, 231, 82, 33, 48, 0, 1, 16, 153, 18, 104, 181, 90, 193, 216, 133, 160, 177, 52, 235, 99, 10, 171},
	{94, 216, 137, 149, 200, 119, 50, 110, 115, 196, 40, 29, 81, 81, 112, 241, 41, 105, 103, 77, 144, 105, 58, 174, 163, 196, 2, 2, 169, 48, 44, 55, 127},
	{132, 166, 65, 148, 213, 53, 211, 81, 3, 135, 208, 118, 68, 225, 112, 144, 195, 89, 87, 71, 23, 158, 227, 251, 146, 26, 101, 115, 126, 154, 87, 81, 210},
	{160, 43, 68, 81, 29, 153, 100, 67, 182, 199, 78, 37, 21, 49, 88, 74, 162, 186, 80, 122, 41, 228, 91, 227, 164, 61, 99, 20, 57, 99, 100, 108, 63},
	{151, 63, 65, 5, 58, 66, 70, 45, 29, 209, 91, 2, 2, 33, 16, 0, 0, 0, 14, 41, 132, 160, 67, 127, 199, 16, 100, 118, 214, 0, 100, 105, 151},
	{165, 70, 3, 112, 122, 246, 159, 142, 171, 165, 118, 67, 81, 71, 85, 253, 125, 247, 95, 115, 14, 61, 33, 165, 160, 80, 77, 120, 17, 100, 55, 244, 196},
	{240, 117, 215, 37, 67, 114, 172, 170, 240, 74, 170, 219, 48, 209, 48, 0, 1, 16, 153, 17, 19, 191, 108, 15, 195, 46, 164, 69, 34, 224, 1, 94, 23},
	{178, 50, 57, 239, 197, 37, 150, 120, 179, 167, 81, 90, 8, 209, 112, 241, 41, 105, 103, 72, 114, 46, 121, 155, 243, 36, 89, 40, 148, 62, 91, 217, 133},
	{149, 96, 55, 154, 196, 100, 59, 19, 55, 147, 106, 84, 74, 177, 112, 144, 195, 89, 87, 66, 44, 172, 62, 133, 210, 126, 3, 119, 229, 92, 168, 181, 206},
	{224, 151, 2, 236, 164, 220, 231, 151, 183, 253, 18, 98, 50, 113, 88, 74, 162, 186, 80, 124, 92, 226, 116, 83, 169, 176, 109, 17, 127, 24, 226, 211, 174},
	{72, 107, 168, 161, 93, 208, 178, 146, 162, 118, 2, 186, 167, 113, 16, 0, 0, 0, 14, 33, 147, 86, 73, 134, 72, 244, 209, 106, 33, 84, 178, 56, 200},
	{221, 212, 163, 119, 80, 112, 25, 162, 239, 237, 143, 193, 112, 39, 85, 253, 125, 247, 95, 114, 133, 193, 70, 12, 250, 215, 138, 243, 216, 190, 242, 139, 37},
	{246, 38, 242, 9, 38, 144, 120, 75, 142, 224, 47, 95, 235, 33, 48, 0, 1, 16, 153, 23, 236, 20, 244, 115, 134, 58, 21, 169, 221, 88, 115, 15, 251},
	{134, 10, 117, 250, 193, 229, 215, 130, 162, 146, 30, 80, 255, 129, 112, 241, 41, 105, 103, 69, 124, 215, 204, 93, 146, 61, 82, 221, 245, 95, 199, 140, 25},
	{211, 131, 115, 236, 7, 217, 58, 185, 123, 144, 226, 40, 10, 81, 112, 144, 195, 89, 87, 69, 57, 45, 95, 66, 150, 248, 163, 96, 87, 61, 187, 237, 210},
	{130, 252, 151, 98, 115, 213, 253, 228, 24, 189, 109, 208, 68, 81, 88, 74, 162, 186, 80, 117, 149, 90, 249, 119, 191, 126, 194, 32, 54, 182, 57, 159, 1},
	{190, 76, 192, 100, 112, 132, 56, 175, 118, 206, 245, 163, 80, 1, 16, 0, 0, 0, 14, 38, 19, 88, 227, 252, 201, 171, 231, 20, 69, 88, 177, 106, 199},
	{233, 169, 231, 54, 102, 121, 161, 104, 135, 233, 169, 231, 54, 103, 85, 253, 125, 247, 95, 119, 105, 177, 104, 167, 153, 212, 196, 241, 22, 229, 226, 43, 17},
	{122, 222, 238, 241, 230, 21, 228, 185, 162, 242, 196, 163, 85, 97, 48, 0, 1, 16, 153, 19, 26, 225, 33, 98, 240, 213, 129, 87, 97, 92, 193, 22, 66},
	{229, 193, 164, 55, 101, 240, 144, 29, 139, 207, 215, 163, 119, 49, 112, 241, 41, 105, 103, 64, 3, 109, 192, 139, 232, 136, 197, 80, 70, 77, 130, 59, 161},
	{232, 152, 196, 80, 70, 77, 130, 40, 163, 232, 152, 196, 80, 65, 112, 144, 195, 89, 87, 70, 77, 130, 40, 163, 232, 152, 196, 80, 70, 77, 130, 40, 163},
	{232, 136, 196, 80, 70, 77, 130, 41, 163, 145, 96, 179, 95, 81, 88, 74, 162, 186, 80, 115, 19, 186, 38, 236, 238, 213, 130, 53, 50, 32, 75, 182, 237},
	{84, 211, 202, 3, 234, 112, 12, 229, 89, 138, 248, 131, 50, 1, 16, 0, 0, 0, 14, 32, 115, 21, 91, 29, 138, 248, 131, 50, 0, 115, 21, 91, 29},
	{68, 36, 3, 83, 36, 242, 12, 136, 21, 128, 12, 1, 196, 173, 255, 87, 215, 93, 245, 217, 100, 188, 54, 32, 56, 80, 49, 33, 48, 82, 142, 134, 104},
}

func main() {
	for _, rawBurst := range EXAMPLE_DMR_PARROT_KERCHUNK_BURSTS {
		timeStarted := time.Now()
		burst := layer2.NewBurstFromBytes(rawBurst)
		timeElapsed := time.Since(timeStarted)
		fmt.Printf("%s: %v\n", enums.SyncPatternToName(burst.SyncPattern), burst.ToString())
		fmt.Printf("Took %s to decode burst\n", timeElapsed)
	}

	fmt.Println("---------------------------------")

	for _, rawBurst := range EXAMPLE_DMR_SMS_BURSTS {
		timeStarted := time.Now()
		burst := layer2.NewBurstFromBytes(rawBurst)
		timeElapsed := time.Since(timeStarted)
		fmt.Printf("%s: %v\n", enums.SyncPatternToName(burst.SyncPattern), burst.ToString())
		fmt.Printf("Took %s to decode burst\n", timeElapsed)
	}

	fmt.Println("---------------------------------")

	for _, rawBurst := range EXAMPLE_DMR_VOICE_BURSTS {
		timeStarted := time.Now()
		burst := layer2.NewBurstFromBytes(rawBurst)
		timeElapsed := time.Since(timeStarted)
		fmt.Printf("%s: %v\n", enums.SyncPatternToName(burst.SyncPattern), burst.ToString())
		fmt.Printf("Took %s to decode burst\n", timeElapsed)
	}
}
